#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include "DHT.h"

#define DHTPIN 4
#define DHTTYPE DHT11
#define MQ135_PIN 34  // MQ-135 sensor connected to ADC pin GPIO34
DHT dht(DHTPIN, DHTTYPE);



const char* ssid = "Cyber Net Asim";
const char* password = "asim@11112";
const char* serverName = "http://192.168.x.x:5000/api/sensors"; // Change to your actual server IP




void setup() {
   
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    
    Serial.print("Connecting to WiFi...");
    while (WiFi.status() != WL_CONNECTED) {
        delay(1000);
        Serial.print(".");
    }
    Serial.println("\nConnected to WiFi!");
    Serial.print("ESP32 IP Address: ");
    Serial.print("ESP32 New IP: ");
    Serial.println(WiFi.localIP());

    
    dht.begin();
    pinMode(MQ135_PIN, INPUT);
}

void loop() {
    if (WiFi.status() == WL_CONNECTED) {
        float temperature = dht.readTemperature();
        float humidity = dht.readHumidity();
        int air_quality = analogRead(MQ135_PIN); // Read from MQ-135 sensor

        Serial.println("Reading sensor values...");
        Serial.print("Temperature: "); Serial.println(temperature);
        Serial.print("Humidity: "); Serial.println(humidity);
        Serial.print("Air Quality: "); Serial.println(air_quality);
        // Serial.println(WiFi.localIP());


        // WiFiClient client;
        // if (!client.connect("192.168.100.10", 5000)) {
        //     Serial.println("❌ Connection to server failed!");
        // } else {
        //     Serial.println("✅ Connection to server successful!");
        // }
        // client.stop();

        HTTPClient http;
        http.begin(serverName);
        http.addHeader("Content-Type", "application/json");

        StaticJsonDocument<200> doc;
        doc["temperature"] = temperature;
        doc["humidity"] = humidity;
        doc["air_quality"] = air_quality;
        String requestBody;
        serializeJson(doc, requestBody);

        Serial.print("Sending JSON: ");
        Serial.println(requestBody);

        int httpResponseCode = http.POST(requestBody);
        
        Serial.print("HTTP Response code: ");
        Serial.println(httpResponseCode);

        if (httpResponseCode > 0) {
            String response = http.getString();
            Serial.println("Server Response: " + response);
        } else {
            Serial.println("Error sending request");
        }

        http.end();
    } else {
        Serial.println("WiFi Disconnected");
    }
    
    delay(5000);
}
